module greenPattern (clk, green_array);
	input logic clk;
	output logic [7:0][7:0] green_array;
	
	logic [9:0] randomNum;
	LFSR random (.clk(clock_select), .reset(SW[9]), .Q(randomNum));
	
	logic occurance;
	always_ff @(posedge clock_select) begin
		occurance <= randomNum[7];
		if (occurance)
			for (int i = 0; i < 8; i++) 
				if (randomNum[4:2] == (i-1)||randomNum[4:2] == (i)||randomNum[4:2] == (i+1)) 
					green_array[i][7] <= 1; //if the index is one above/one below or the same as the 3-bit randomized number 
				else 								//set it off as the opening
					green_array[i][7] <= 0; //else set them on (active low)
	end
endmodule
