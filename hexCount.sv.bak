module hexCount (clk, reset, score, HEX);
	input logic clk, reset;
	output logic [6:0] HEX;
	
	logic [2:0]count = 3'b000;
	
	always_comb begin
		case (count)
			0: HEX = 7'b1000000;
			1: HEX = 7'b1111001;
			2: HEX = 7'b0100100;
			3: HEX = 7'b0110000;
			4: HEX = 7'b0011001;
			5: HEX = 7'b0010010;
			6: HEX = 7'b0000010;
			7: HEX = 7'b1111000;
			8: HEX = 7'b0000000;
			9: HEX = 7'b0010000;
		endcase
	end
	
	always_ff @(posedge clk) begin
		if (reset) begin
			count <= 0;
		end
		else if (score) begin
			count++;
		end
	end
endmodule
	
	
	
	